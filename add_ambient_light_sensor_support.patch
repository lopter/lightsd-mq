# HG changeset patch
# Parent  318b14b3d86d3f89663ea25b158abbd91cfcb3ed
Add support for the ambient light sensor

As well as a bunch of LIFX packet types definitions.

diff --git a/core/proto.c b/core/proto.c
--- a/core/proto.c
+++ b/core/proto.c
@@ -218,10 +218,12 @@
                         "\"site\":\"%s\","
                         "\"url\":\"tcp://[%s]:%hu\","
                         "\"latency\":%ju"
-                    "}",
+                    "},"
+                    "\"sensors\":{\"ambient_light\":%f}",
             bulb_addr, site_addr,
             bulb->gw->ip_addr, bulb->gw->port,
-            (uintmax_t)LGTD_LIFX_GATEWAY_LATENCY(bulb->gw)
+            (uintmax_t)LGTD_LIFX_GATEWAY_LATENCY(bulb->gw),
+            bulb->ambient_light
         );
 
 #define PRINT_LIFX_FW_TIMESTAMPS(fw_info, built_at_buf, installed_at_buf)       \
diff --git a/lifx/bulb.c b/lifx/bulb.c
--- a/lifx/bulb.c
+++ b/lifx/bulb.c
@@ -330,3 +330,11 @@
 
     memcpy(bulb->state.label, label, LGTD_LIFX_LABEL_SIZE);
 }
+
+void
+lgtd_lifx_bulb_set_ambient_light(struct lgtd_lifx_bulb *bulb, float illuminance)
+{
+    assert(bulb);
+
+    bulb->ambient_light = illuminance;
+}
diff --git a/lifx/bulb.h b/lifx/bulb.h
--- a/lifx/bulb.h
+++ b/lifx/bulb.h
@@ -89,6 +89,7 @@
     lgtd_time_mono_t                dirty_at;
     uint16_t                        expected_power_on;
     uint8_t                         addr[LGTD_LIFX_ADDR_LENGTH];
+    float                           ambient_light; // lux
     const char                      *model;
     const char                      *vendor;
     struct lgtd_lifx_gateway        *gw;
@@ -143,3 +144,4 @@
                                      lgtd_time_mono_t);
 void lgtd_lifx_bulb_set_label(struct lgtd_lifx_bulb *,
                               const char [LGTD_LIFX_LABEL_SIZE]);
+void lgtd_lifx_bulb_set_ambient_light(struct lgtd_lifx_bulb *, float);
diff --git a/lifx/gateway.c b/lifx/gateway.c
--- a/lifx/gateway.c
+++ b/lifx/gateway.c
@@ -236,6 +236,8 @@
     struct lgtd_lifx_packet_tags pkt = { .tags = LGTD_LIFX_ALL_TAGS };
     lgtd_lifx_gateway_send_to_site_quiet(gw, LGTD_LIFX_GET_TAG_LABELS, &pkt);
 
+    lgtd_lifx_gateway_send_to_site_quiet(gw, LGTD_LIFX_GET_AMBIENT_LIGHT, NULL);
+
     gw->pending_refresh_req = true;
 }
 
@@ -867,3 +869,24 @@
         gw, hdr->target.device_addr, lgtd_lifx_bulb_set_label, pkt->label
     );
 }
+
+void
+lgtd_lifx_gateway_handle_ambient_light(struct lgtd_lifx_gateway *gw,
+                                       const struct lgtd_lifx_packet_header *hdr,
+                                       const struct lgtd_lifx_packet_ambient_light *pkt)
+{
+    assert(gw && hdr && pkt);
+
+    char addr[LGTD_LIFX_ADDR_STRLEN];
+    lgtd_info(
+        "AMBIENT_LIGHT <-- [%s]:%hu - %s ambient_light=%flx",
+        gw->ip_addr, gw->port,
+        LGTD_IEEE8023MACTOA(hdr->target.device_addr, addr),
+        pkt->illuminance
+    );
+
+    LGTD_LIFX_GATEWAY_SET_BULB_ATTR(
+        gw, hdr->target.device_addr,
+        lgtd_lifx_bulb_set_ambient_light, pkt->illuminance
+    );
+}
diff --git a/lifx/gateway.h b/lifx/gateway.h
--- a/lifx/gateway.h
+++ b/lifx/gateway.h
@@ -148,3 +148,6 @@
 void lgtd_lifx_gateway_handle_bulb_label(struct lgtd_lifx_gateway *,
                                          const struct lgtd_lifx_packet_header *,
                                          const struct lgtd_lifx_packet_label *);
+void lgtd_lifx_gateway_handle_ambient_light(struct lgtd_lifx_gateway *,
+                                            const struct lgtd_lifx_packet_header *,
+                                            const struct lgtd_lifx_packet_ambient_light *);
diff --git a/lifx/wire_proto.c b/lifx/wire_proto.c
--- a/lifx/wire_proto.c
+++ b/lifx/wire_proto.c
@@ -313,6 +313,20 @@
             .decode = lgtd_lifx_wire_null_packet_encoder_decoder,
             .handle = HANDLER(lgtd_lifx_gateway_handle_bulb_label)
         },
+        {
+            REQUEST_ONLY,
+            NO_PAYLOAD,
+            .name = "GET_AMBIENT_LIGHT",
+            .type = LGTD_LIFX_GET_AMBIENT_LIGHT
+        },
+        {
+            RESPONSE_ONLY,
+            .name = "STATE_AMBIENT_LIGHT",
+            .type = LGTD_LIFX_STATE_AMBIENT_LIGHT,
+            .size = sizeof(struct lgtd_lifx_packet_ambient_light),
+            .decode = DECODER(lgtd_lifx_wire_decode_ambient_light),
+            .handle = HANDLER(lgtd_lifx_gateway_handle_ambient_light)
+        },
         // Unimplemented but "known" packets
         {
             UNIMPLEMENTED,
@@ -423,6 +437,16 @@
             UNIMPLEMENTED,
             .name = "ACCESS_POINT",
             .type = LGTD_LIFX_ACCESS_POINT
+        },
+        {
+            UNIMPLEMENTED,
+            .name = "GET_DIMMER_VOLTAGE",
+            .type = LGTD_LIFX_GET_DIMMER_VOLTAGE
+        },
+        {
+            UNIMPLEMENTED,
+            .name = "STATE_DIMMER_VOLTAGE",
+            .type = LGTD_LIFX_STATE_DIMMER_VOLTAGE
         }
     };
 
@@ -719,3 +743,11 @@
     pkt->uptime = le64toh(pkt->uptime);
     pkt->downtime = le64toh(pkt->downtime);
 }
+
+void
+lgtd_lifx_wire_decode_ambient_light(struct lgtd_lifx_packet_ambient_light *pkt)
+{
+    assert(pkt);
+
+    pkt->illuminance = lgtd_lifx_wire_lefloattoh(pkt->illuminance);
+}
diff --git a/lifx/wire_proto.h b/lifx/wire_proto.h
--- a/lifx/wire_proto.h
+++ b/lifx/wire_proto.h
@@ -116,6 +116,8 @@
 enum { LGTD_LIFX_MAX_PACKET_SIZE = 4096 };
 
 enum lgtd_lifx_packet_type {
+    // Device
+    LGTD_LIFX_SET_SITE = 0x01,
     LGTD_LIFX_GET_PAN_GATEWAY = 0x02,
     LGTD_LIFX_PAN_GATEWAY = 0x03,
     LGTD_LIFX_GET_TIME = 0x04,
@@ -155,18 +157,32 @@
     LGTD_LIFX_ACK = 0x2d,
     LGTD_LIFX_ECHO_REQUEST = 0x3a,
     LGTD_LIFX_ECHO_RESPONSE = 0x3b,
+    // Light
     LGTD_LIFX_GET_LIGHT_STATE = 0x65,
     LGTD_LIFX_SET_LIGHT_COLOR = 0x66,
     LGTD_LIFX_SET_WAVEFORM = 0x67,
     LGTD_LIFX_SET_DIM_ABSOLUTE = 0x68,
     LGTD_LIFX_SET_DIM_RELATIVE = 0x69,
     LGTD_LIFX_LIGHT_STATUS = 0x6b,
+    // Wan
+    LGTD_LIFX_CONNECT_PLAIN = 0xc9,
+    LGTD_LIFX_CONNECT_KEY = 0xca,
+    LGTD_LIFX_STATE_CONNECT = 0xcb,
+    LGTD_LIFX_SUB = 0xcc,
+    LGTD_LIFX_UNSUB = 0xcd,
+    LGTD_LIFX_STATE_SUB = 0xcd,
+    // Wifi
     LGTD_LIFX_GET_WIFI_STATE = 0x12d,
     LGTD_LIFX_SET_WIFI_STATE = 0x12e,
     LGTD_LIFX_WIFI_STATE = 0x12f,
     LGTD_LIFX_GET_ACCESS_POINTS = 0x130,
     LGTD_LIFX_SET_ACCESS_POINTS = 0x131,
     LGTD_LIFX_ACCESS_POINT = 0x132,
+    // Sensor
+    LGTD_LIFX_GET_AMBIENT_LIGHT = 0x191,
+    LGTD_LIFX_STATE_AMBIENT_LIGHT = 0x192,
+    LGTD_LIFX_GET_DIMMER_VOLTAGE = 0x193,
+    LGTD_LIFX_STATE_DIMMER_VOLTAGE = 0x194
 };
 
 enum { LGTD_LIFX_LABEL_SIZE = 32 };
@@ -278,6 +294,11 @@
     uint64le_t  uptime;
     uint64le_t  downtime;
 };
+
+struct lgtd_lifx_packet_ambient_light {
+    floatle_t illuminance; // lux
+};
+
 #pragma pack(pop)
 
 enum { LGTD_LIFX_VENDOR_ID = 1 };
@@ -394,3 +415,4 @@
 void lgtd_lifx_wire_decode_ip_firmware_info(struct lgtd_lifx_packet_ip_firmware_info *);
 void lgtd_lifx_wire_decode_product_info(struct lgtd_lifx_packet_product_info *);
 void lgtd_lifx_wire_decode_runtime_info(struct lgtd_lifx_packet_runtime_info *);
+void lgtd_lifx_wire_decode_ambient_light(struct lgtd_lifx_packet_ambient_light *);
diff --git a/tests/lifx/mock_gateway.h b/tests/lifx/mock_gateway.h
--- a/tests/lifx/mock_gateway.h
+++ b/tests/lifx/mock_gateway.h
@@ -191,3 +191,15 @@
     (void)pkt;
 }
 #endif
+
+#ifndef MOCKED_LGTD_LIFX_GATEWAY_HANDLE_AMBIENT_LIGHT
+void
+lgtd_lifx_gateway_handle_ambient_light(struct lgtd_lifx_gateway *gw,
+                                       const struct lgtd_lifx_packet_header *hdr,
+                                       const struct lgtd_lifx_packet_ambient_light *pkt)
+{
+    (void)gw;
+    (void)hdr;
+    (void)pkt;
+}
+#endif
