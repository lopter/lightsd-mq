# HG changeset patch
# Parent 65193deb9c4ec4ec4cab9f9e60f0bd66886b19f2
Fix crash on newline in the jsonrpc code

diff --git a/core/jsonrpc.c b/core/jsonrpc.c
--- a/core/jsonrpc.c
+++ b/core/jsonrpc.c
@@ -217,7 +217,9 @@
                                                  int ntokens,
                                                  const char *json)
 {
-    assert(tokens[0].type == JSMN_OBJECT);
+    if (!ntokens || tokens[0].type != JSMN_OBJECT) {
+        return false;
+    }
 
     for (int ti = 1; ti < ntokens;) {
         // make sure it's a key:
@@ -301,7 +303,9 @@
                                                   int ntokens,
                                                   const char *json)
 {
-    assert(tokens[0].type == JSMN_ARRAY);
+    if (!ntokens || tokens[0].type != JSMN_ARRAY) {
+        return false;
+    }
 
     int si, ti;
     for (si = 0, ti = 1; si < schema_size && ti < ntokens; si++) {
@@ -661,7 +665,7 @@
     };
 
     assert(client);
-    assert(parsed > 0);
+    assert(parsed >= 0);
 
     const jsmntok_t *tokens = client->jsmn_tokens;
 
diff --git a/tests/core/jsonrpc/test_jsonrpc_extract_request_params_array.c b/tests/core/jsonrpc/test_jsonrpc_extract_request_params_array.c
--- a/tests/core/jsonrpc/test_jsonrpc_extract_request_params_array.c
+++ b/tests/core/jsonrpc/test_jsonrpc_extract_request_params_array.c
@@ -50,5 +50,12 @@
         errx(1, "wrong id");
     }
 
+    ok = lgtd_jsonrpc_check_and_extract_request(
+        &req, tokens, 0, json
+    );
+    if (ok) {
+        errx(1, "empty request should return false");
+    }
+
     return 0;
 }
diff --git a/tests/core/jsonrpc/test_jsonrpc_extract_request_params_obj.c b/tests/core/jsonrpc/test_jsonrpc_extract_request_params_obj.c
--- a/tests/core/jsonrpc/test_jsonrpc_extract_request_params_obj.c
+++ b/tests/core/jsonrpc/test_jsonrpc_extract_request_params_obj.c
@@ -50,5 +50,12 @@
         errx(1, "wrong id");
     }
 
+    ok = lgtd_jsonrpc_check_and_extract_request(
+        &req, tokens, 0, json
+    );
+    if (ok) {
+        errx(1, "empty request should return false");
+    }
+
     return 0;
 }
