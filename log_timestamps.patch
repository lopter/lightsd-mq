# HG changeset patch
# Parent 548d79f4549ddddc381af454f7d16bb6a45889c8

diff --git a/core/broadcast.c b/core/broadcast.c
--- a/core/broadcast.c
+++ b/core/broadcast.c
@@ -69,7 +69,7 @@
 
     while (true) {
         struct sockaddr_storage peer;
-        ev_socklen_t addrlen;
+        ev_socklen_t addrlen = sizeof(peer);
         union {
             char buf[LIFXD_MAX_PACKET_SIZE];
             struct lifxd_packet_header hdr;
diff --git a/core/lifxd.c b/core/lifxd.c
--- a/core/lifxd.c
+++ b/core/lifxd.c
@@ -55,6 +55,7 @@
 
 struct lifxd_opts lifxd_opts = {
     .foreground = false,
+    .log_timestamps = true,
     .master_port = 56700,
     .verbosity = LIFXD_DEBUG
 }; 
@@ -130,7 +131,7 @@
 {
     printf(
         "Usage: %s [-p master_bulb_port] "
-        "[-v debug|info|warning|error] [-f] [-h] [-V]\n",
+        "[-v debug|info|warning|error] [-f] [-t] [-h] [-V]\n",
         progname
     );
     exit(0);
@@ -139,22 +140,27 @@
 int
 main(int argc, char *argv[])
 {
-    static const struct option opts[] = {
-        {"foreground",  no_argument,       NULL, 'f'},
-        {"help",        no_argument,       NULL, 'h'},
-        {"master-port", required_argument, NULL, 'p'},
-        {"verbosity",   required_argument, NULL, 'v'},
-        {"version",     no_argument,       NULL, 'V'},
-        {NULL,          0,                 NULL, 0}
+    static const struct option long_opts[] = {
+        {"foreground",      no_argument,       NULL, 'f'},
+        {"no-timestamps",   no_argument,       NULL, 't'},
+        {"help",            no_argument,       NULL, 'h'},
+        {"master-port",     required_argument, NULL, 'p'},
+        {"verbosity",       required_argument, NULL, 'v'},
+        {"version",         no_argument,       NULL, 'V'},
+        {NULL,              0,                 NULL, 0}
     };
+    const char short_opts[] = "fthp:v:V";
 
-    for (int rv = getopt_long(argc, argv, "fhp:v:V", opts, NULL);
+    for (int rv = getopt_long(argc, argv, short_opts, long_opts, NULL);
          rv != -1;
-         rv = getopt_long(argc, argv, "fh:p:v:V", opts, NULL)) {
+         rv = getopt_long(argc, argv, short_opts, long_opts, NULL)) {
         switch (rv) {
         case 'f':
             lifxd_opts.foreground = true;
-            break ;
+            break;
+        case 't':
+            lifxd_opts.log_timestamps = false;
+            break;
         case 'h':
             lifxd_usage(argv[0]);
         case 'p':
@@ -162,7 +168,7 @@
             long port = strtol(optarg, NULL, 10);
             if (!errno && port <= UINT16_MAX && port > 0) {
                 lifxd_opts.master_port = port;
-                break ;
+                break;
             }
             lifxd_errx(
                 1, "The master port must be between 1 and %d", UINT16_MAX
@@ -174,13 +180,13 @@
                 };
                 if (!strcasecmp(optarg, verbose_levels[i])) {
                     lifxd_opts.verbosity = i;
-                    break ;
+                    break;
                 }
                 if (++i == LIFXD_ARRAY_SIZE(verbose_levels)) {
                     lifxd_errx(1, "Unknown verbosity level: %s", optarg);
                 }
             }
-            break ;
+            break;
         case 'V':
             printf("%s v%s\n", argv[0], LIFXD_VERSION);
             return 0;
diff --git a/core/lifxd.h b/core/lifxd.h
--- a/core/lifxd.h
+++ b/core/lifxd.h
@@ -42,6 +42,7 @@
 
 struct lifxd_opts {
     bool                    foreground;
+    bool                    log_timestamps;
     uint16_t                master_port;
     enum lifxd_verbosity    verbosity;
 };
diff --git a/core/log.c b/core/log.c
--- a/core/log.c
+++ b/core/log.c
@@ -28,6 +28,7 @@
 // POSSIBILITY OF SUCH DAMAGE.
 
 #include <sys/tree.h>
+#include <sys/time.h>
 #include <arpa/inet.h>
 #include <assert.h>
 #include <err.h>
@@ -36,12 +37,55 @@
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
+#include <time.h>
 
 #include <event2/event.h>
 
 #include "wire_proto.h"
 #include "lifxd.h"
 
+static void
+lifxd_isotime_now(char *strbuf, int bufsz)
+{
+    assert(strbuf);
+    assert(bufsz > 0);
+
+    struct timeval now;
+    if (gettimeofday(&now, NULL) == -1) {
+        goto error;
+    }
+    struct tm tm_now;
+    if (!localtime_r(&now.tv_sec, &tm_now)) {
+        goto error;
+    }
+    // '2015-01-02T10:13:16.132222+00:00'
+    snprintf(
+        strbuf, bufsz, "%d-%02d-%02dT%02d:%02d:%02d.%d+%02ld:%02ld",
+        1900 + tm_now.tm_year, 1 + tm_now.tm_mon, tm_now.tm_mday,
+        tm_now.tm_hour, tm_now.tm_min, tm_now.tm_sec,
+        now.tv_usec, tm_now.tm_gmtoff / 60 / 60,
+        tm_now.tm_gmtoff % (60 * 60)
+    );
+    return;
+error:
+    strbuf[0] = '\0';
+}
+
+static void
+lifxd_log_header(const char *loglvl, bool showprogname)
+{
+    if (lifxd_opts.log_timestamps) {
+        char timestr[64];
+        lifxd_isotime_now(timestr, sizeof(timestr));
+        fprintf(
+            stderr, "[%s] [%s] %s",
+            timestr, loglvl, showprogname ? "lifxd: " : ""
+        );
+        return;
+    }
+    fprintf(stderr, "[%s] %s", loglvl, showprogname ? "lifxd: " : "");
+}
+
 const char *
 lifxd_addrtoa(const uint8_t *addr)
 {
@@ -86,7 +130,7 @@
     vsnprintf(errmsg, sizeof(errmsg), fmt, ap);
     va_end(ap);
     lifxd_cleanup();
-    fputs("[ERR]   ", stderr);
+    lifxd_log_header("ERR", false);
     errno = errsave;
     errfn(eval, errmsg);
 }
@@ -97,7 +141,7 @@
     if (lifxd_opts.verbosity <= LIFXD_WARN) {
         va_list ap;
         va_start(ap, fmt);
-        fputs("[WARN]  ", stderr);
+        lifxd_log_header("WARN", false);
         warnfn(fmt, ap);
         va_end(ap);
     }
@@ -109,7 +153,7 @@
     if (lifxd_opts.verbosity <= LIFXD_INFO) {
         va_list ap;
         va_start(ap, fmt);
-        fprintf(stderr, "[INFO]  lifxd: ");
+        lifxd_log_header("INFO", true);
         vfprintf(stderr, fmt, ap);
         va_end(ap);
         fprintf(stderr, "\n");
@@ -122,7 +166,7 @@
     if (lifxd_opts.verbosity <= LIFXD_DEBUG) {
         va_list ap;
         va_start(ap, fmt);
-        fprintf(stderr, "[DEBUG] lifxd: ");
+        lifxd_log_header("DEBUG", true);
         vfprintf(stderr, fmt, ap);
         va_end(ap);
         fprintf(stderr, "\n");
diff --git a/core/wire_proto.h b/core/wire_proto.h
--- a/core/wire_proto.h
+++ b/core/wire_proto.h
@@ -29,8 +29,6 @@
 
 #pragma once
 
-#pragma pack(push, 1)
-
 typedef uint16_t uint16le_t;
 typedef uint16_t uint16be_t;
 typedef uint32_t uint32le_t;
@@ -40,6 +38,8 @@
 
 enum { LIFXD_ADDR_LENGTH = 6 };
 
+#pragma pack(push, 1)
+
 struct lifxd_packet_header {
     //! Packet size including the headers (i.e: this structure).
     uint16le_t      size;
@@ -135,28 +135,6 @@
     LIFXD_ACCESS_POINT = 0x132,
 };
 
-struct lifxd_gateway;
-
-struct lifxd_packet_infos {
-    RB_ENTRY(lifxd_packet_infos)    link;
-    const char                      *name;
-    enum lifxd_packet_type          type;
-    unsigned                        size;
-    void                            (*decode)(void *);
-    void                            (*encode)(void *);
-    void                            (*handle)(struct lifxd_gateway *,
-                                              const struct lifxd_packet_header *,
-                                              const void *);
-};
-RB_HEAD(lifxd_packet_infos_map, lifxd_packet_infos);
-
-static inline int
-lifxd_packet_infos_cmp(struct lifxd_packet_infos *a,
-                       struct lifxd_packet_infos *b)
-{
-    return a->type - b->type;
-}
-
 enum { LIFXD_LABEL_SIZE = 32 };
 
 struct lifxd_packet_light_status {
@@ -196,6 +174,30 @@
     LIFXD_TARGET_ALL_DEVICES
 };
 
+#pragma pack(pop)
+
+struct lifxd_gateway;
+
+struct lifxd_packet_infos {
+    RB_ENTRY(lifxd_packet_infos)    link;
+    const char                      *name;
+    enum lifxd_packet_type          type;
+    unsigned                        size;
+    void                            (*decode)(void *);
+    void                            (*encode)(void *);
+    void                            (*handle)(struct lifxd_gateway *,
+                                              const struct lifxd_packet_header *,
+                                              const void *);
+};
+RB_HEAD(lifxd_packet_infos_map, lifxd_packet_infos);
+
+static inline int
+lifxd_packet_infos_cmp(struct lifxd_packet_infos *a,
+                       struct lifxd_packet_infos *b)
+{
+    return a->type - b->type;
+}
+
 union lifxd_target {
     uint64_t        tags;
     const uint8_t   *addr; //! site or device address
@@ -219,5 +221,3 @@
 void lifxd_wire_decode_light_status(struct lifxd_packet_light_status *);
 void lifxd_wire_encode_light_status(struct lifxd_packet_light_status *);
 void lifxd_wire_decode_power_state(struct lifxd_packet_power_state *);
-
-#pragma pack(pop)
