# HG changeset patch
# Parent  bd4e5be5854aee3d23e560870ffd886f75f696ef
Add the --rundir option so we can easily launch lightsc.py

diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt
--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -8,6 +8,9 @@
     ${CMAKE_CURRENT_BINARY_DIR}
 )
 
+IF (NOT LGTD_RUNTIME_DIRECTORY)
+    SET(LGTD_RUNTIME_DIRECTORY "${LIGHTSD_BINARY_DIR}")
+ENDIF ()
 CONFIGURE_FILE(version.h.in ${CMAKE_CURRENT_BINARY_DIR}/version.h)
 
 ADD_EXECUTABLE(
@@ -28,10 +31,7 @@
 )
 
 TARGET_LINK_LIBRARIES(
-    lightsd
-    lifx
-    ${EVENT2_CORE_LIBRARY}
-    ${TIME_MONOTONIC_LIBRARY}
+    lightsd lifx ${EVENT2_CORE_LIBRARY} ${TIME_MONOTONIC_LIBRARY}
 )
 
 INSTALL(TARGETS lightsd RUNTIME DESTINATION bin)
diff --git a/core/lightsd.c b/core/lightsd.c
--- a/core/lightsd.c
+++ b/core/lightsd.c
@@ -143,7 +143,9 @@
 "  [-V,--version]                       Display version and build information.\n"
 "  [-v,--verbosity debug|info|warning|error]\n"
 "\nor,\n\n"
-"  --prefix                             Display the install prefix for lightsd.\n",
+"  --prefix                             Display the install prefix for lightsd.\n"
+"\nor,\n\n"
+"  --rundir                             Display the runtime directory for lightsd.\n",
         progname
     );
     lgtd_cleanup();
@@ -171,6 +173,7 @@
         {"verbosity",       required_argument, NULL, 'v'},
         {"version",         no_argument,       NULL, 'V'},
         {"prefix",          no_argument,       NULL, 'p'},
+        {"rundir",          no_argument,       NULL, 'r'},
         {NULL,              0,                 NULL, 0}
     };
     const char short_opts[] = "l:c:s:fdu:g:thv:V";
@@ -245,6 +248,13 @@
                 ] != '/' ?  "/" : ""
             );
             return 0;
+        case 'r':
+            printf(
+                "%s%s\n", LGTD_RUNTIME_DIRECTORY, LGTD_RUNTIME_DIRECTORY[
+                    LGTD_ARRAY_SIZE(LGTD_RUNTIME_DIRECTORY) - 1
+                ] != '/' ?  "/" : ""
+            );
+            return 0;
         default:
             lgtd_usage(argv[0]);
         }
diff --git a/core/version.h.in b/core/version.h.in
--- a/core/version.h.in
+++ b/core/version.h.in
@@ -36,3 +36,5 @@
 );
 
 const char LGTD_INSTALL_PREFIX[] = "@CMAKE_INSTALL_PREFIX@";
+
+const char LGTD_RUNTIME_DIRECTORY[] = "@LGTD_RUNTIME_DIRECTORY@";
diff --git a/examples/lightsc.py b/examples/lightsc.py
--- a/examples/lightsc.py
+++ b/examples/lightsc.py
@@ -31,7 +31,10 @@
 import argparse
 import contextlib
 import json
+import locale
+import os
 import socket
+import subprocess
 import sys
 import urllib.parse
 import uuid
@@ -219,6 +222,17 @@
     code.interact(banner=banner, local=locals())
 
 if __name__ == "__main__":
+    try:
+        lightsdrundir = subprocess.check_output(["lightsd", "--rundir"])
+    except Exception as ex:
+        print(
+            "Couldn't infer lightsd's runtime directory is lightsd installed? "
+            "({})".format(ex),
+            file=sys.stderr
+        )
+        sys.exit(1)
+    lightsdrundir = lightsdrundir.decode(locale.getpreferredencoding()).strip()
+
     parser = argparse.ArgumentParser(
         description="lightsc.py is an interactive lightsd Python client"
     )
@@ -226,11 +240,12 @@
         "-u", "--url", type=str,
         help="How to connect to lightsd (e.g: "
              "unix:///run/lightsd/socket or tcp://[::1]:1234)",
-        default="unix:///run/lightsd/socket",
+        default="unix://" + os.path.join(lightsdrundir, "socket")
     )
     args = parser.parse_args()
 
     try:
+        print("Connecting to lightsd@{}".format(args.url))
         with LightsClient(args.url) as client:
             _drop_to_shell(client)
     except Exception as ex:
