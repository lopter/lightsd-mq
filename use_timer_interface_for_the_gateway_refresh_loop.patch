# HG changeset patch
# Parent  558b65cfbfb0aaf6ed65d5abbfd060d456f84db8
Speed-up bulbs discovery

By querying a gateway's bulbs as soon as it's discovered.

This is the exact same optimization done earlier with the gateway
discovery timer.

This changeset also updates the gateway code to use the new timer
interface.

diff --git a/lifx/gateway.c b/lifx/gateway.c
--- a/lifx/gateway.c
+++ b/lifx/gateway.c
@@ -38,6 +38,7 @@
 #include "gateway.h"
 #include "watchdog.h"
 #include "broadcast.h"
+#include "core/timer.h"
 #include "tagging.h"
 #include "core/jsmn.h"
 #include "core/jsonrpc.h"
@@ -57,13 +58,12 @@
     assert(gw);
 
     LGTD_STATS_ADD_AND_UPDATE_PROCTITLE(gateways, -1);
-    event_del(gw->refresh_ev);
+    lgtd_timer_stop(gw->refresh_timer);
     event_del(gw->write_ev);
     if (gw->socket != -1) {
         evutil_closesocket(gw->socket);
         LIST_REMOVE(gw, link);
     }
-    event_free(gw->refresh_ev);
     event_free(gw->write_ev);
     evbuffer_free(gw->write_buf);
     for (int i = 0; i != LGTD_LIFX_GATEWAY_MAX_TAGS; i++) {
@@ -240,13 +240,12 @@
 }
 
 static void
-lgtd_lifx_gateway_refresh_callback(evutil_socket_t socket,
-                                   short events,
-                                   void *ctx)
+lgtd_lifx_gateway_refresh_callback(struct lgtd_timer *timer,
+                                   union lgtd_timer_ctx ctx)
 {
-    (void)socket;
-    (void)events;
-    lgtd_lifx_gateway_send_get_all_light_state((struct lgtd_lifx_gateway *)ctx);
+    (void)timer;
+    struct lgtd_lifx_gateway *gw = ctx.as_ptr;
+    lgtd_lifx_gateway_send_get_all_light_state(gw);
 }
 
 void
@@ -254,7 +253,7 @@
 {
     assert(gw);
 
-    event_active(gw->refresh_ev, 0, 0);
+    lgtd_timer_activate(gw->refresh_timer);
 }
 
 static struct lgtd_lifx_bulb *
@@ -303,6 +302,7 @@
         lgtd_warn("can't open a new socket");
         goto error_connect;
     }
+
     gw->write_ev = event_new(
         lgtd_ev_base,
         gw->socket,
@@ -311,9 +311,11 @@
         gw
     );
     gw->write_buf = evbuffer_new();
-    gw->refresh_ev = evtimer_new(
-        lgtd_ev_base, lgtd_lifx_gateway_refresh_callback, gw
-    );
+    if (!gw->write_ev || !gw->write_buf) {
+        lgtd_warn("can't allocate a new gateway bulb");
+        goto error_allocate;
+    }
+
     memcpy(&gw->peer, peer, sizeof(gw->peer));
     lgtd_sockaddrtoa(peer, gw->ip_addr, sizeof(gw->ip_addr));
     gw->port = lgtd_sockaddrport(peer);
@@ -322,13 +324,15 @@
     gw->next_req_at = received_at;
     gw->last_pkt_at = received_at;
 
-    struct timeval refresh_interval = LGTD_MSECS_TO_TIMEVAL(
-        LGTD_LIFX_GATEWAY_MIN_REFRESH_INTERVAL_MSECS
+    union lgtd_timer_ctx ctx = { .as_ptr = gw };
+    gw->refresh_timer = lgtd_timer_start(
+        LGTD_TIMER_ACTIVATE_NOW,
+        LGTD_LIFX_GATEWAY_MIN_REFRESH_INTERVAL_MSECS,
+        lgtd_lifx_gateway_refresh_callback,
+        ctx
     );
-
-    if (!gw->write_ev || !gw->write_buf || !gw->refresh_ev
-        || event_add(gw->refresh_ev, &refresh_interval) != 0) {
-        lgtd_warn("can't allocate a new gateway bulb");
+    if (!gw->refresh_timer) {
+        lgtd_warn("can't allocate a new timer");
         goto error_allocate;
     }
 
@@ -355,9 +359,6 @@
     if (gw->write_buf) {
         evbuffer_free(gw->write_buf);
     }
-    if (gw->refresh_ev) {
-        event_free(gw->refresh_ev);
-    }
 error_connect:
     evutil_closesocket(gw->socket);
 error_socket:
@@ -533,10 +534,10 @@
 
     int latency = gw->last_pkt_at - gw->last_req_at;
     if (latency < LGTD_LIFX_GATEWAY_MIN_REFRESH_INTERVAL_MSECS) {
-        if (!event_pending(gw->refresh_ev, EV_TIMEOUT, NULL)) {
+        if (!lgtd_timer_ispending(gw->refresh_timer)) {
             int timeout = LGTD_LIFX_GATEWAY_MIN_REFRESH_INTERVAL_MSECS - latency;
             struct timeval tv = LGTD_MSECS_TO_TIMEVAL(timeout);
-            evtimer_add(gw->refresh_ev, &tv);
+            lgtd_timer_reschedule(gw->refresh_timer, &tv);
             lgtd_debug(
                 "[%s]:%hu latency is %dms, scheduling next GET_LIGHT_STATE in %dms",
                 gw->ip_addr, gw->port, latency, timeout
diff --git a/lifx/gateway.h b/lifx/gateway.h
--- a/lifx/gateway.h
+++ b/lifx/gateway.h
@@ -71,7 +71,7 @@
     struct event                    *write_ev;
     struct evbuffer                 *write_buf;
     bool                            pending_refresh_req;
-    struct event                    *refresh_ev;
+    struct lgtd_timer               *refresh_timer;
 };
 LIST_HEAD(lgtd_lifx_gateway_list, lgtd_lifx_gateway);
 
diff --git a/tests/lifx/gateway/test_gateway_allocate_tag_id.c b/tests/lifx/gateway/test_gateway_allocate_tag_id.c
--- a/tests/lifx/gateway/test_gateway_allocate_tag_id.c
+++ b/tests/lifx/gateway/test_gateway_allocate_tag_id.c
@@ -4,6 +4,7 @@
 
 #define MOCKED_LIFX_TAGGING_INCREF
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 static bool tagging_incref_called = false;
 
diff --git a/tests/lifx/gateway/test_gateway_allocate_tag_id_from_lifx_network.c b/tests/lifx/gateway/test_gateway_allocate_tag_id_from_lifx_network.c
--- a/tests/lifx/gateway/test_gateway_allocate_tag_id_from_lifx_network.c
+++ b/tests/lifx/gateway/test_gateway_allocate_tag_id_from_lifx_network.c
@@ -4,6 +4,7 @@
 
 #define MOCKED_LIFX_TAGGING_INCREF
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 static bool tagging_incref_called = false;
 
diff --git a/tests/lifx/gateway/test_gateway_allocate_tag_id_no_tag_id_left.c b/tests/lifx/gateway/test_gateway_allocate_tag_id_no_tag_id_left.c
--- a/tests/lifx/gateway/test_gateway_allocate_tag_id_no_tag_id_left.c
+++ b/tests/lifx/gateway/test_gateway_allocate_tag_id_no_tag_id_left.c
@@ -5,6 +5,7 @@
 
 #define MOCKED_LIFX_TAGGING_INCREF
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 static bool tagging_incref_called = false;
 
diff --git a/tests/lifx/gateway/test_gateway_deallocate_tag_id_from_lifx_network.c b/tests/lifx/gateway/test_gateway_deallocate_tag_id_from_lifx_network.c
--- a/tests/lifx/gateway/test_gateway_deallocate_tag_id_from_lifx_network.c
+++ b/tests/lifx/gateway/test_gateway_deallocate_tag_id_from_lifx_network.c
@@ -4,6 +4,7 @@
 
 #define MOCKED_LIFX_TAGGING_DECREF
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 static bool tagging_decref_called = false;
 
diff --git a/tests/lifx/gateway/test_gateway_enqueue_packet.c b/tests/lifx/gateway/test_gateway_enqueue_packet.c
--- a/tests/lifx/gateway/test_gateway_enqueue_packet.c
+++ b/tests/lifx/gateway/test_gateway_enqueue_packet.c
@@ -1,6 +1,7 @@
 #include "gateway.c"
 
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 int
 main(void)
diff --git a/tests/lifx/gateway/test_gateway_enqueue_packet_ring_full.c b/tests/lifx/gateway/test_gateway_enqueue_packet_ring_full.c
--- a/tests/lifx/gateway/test_gateway_enqueue_packet_ring_full.c
+++ b/tests/lifx/gateway/test_gateway_enqueue_packet_ring_full.c
@@ -1,6 +1,7 @@
 #include "gateway.c"
 
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 int
 main(void)
diff --git a/tests/lifx/gateway/test_gateway_enqueue_packet_ring_wraparound.c b/tests/lifx/gateway/test_gateway_enqueue_packet_ring_wraparound.c
--- a/tests/lifx/gateway/test_gateway_enqueue_packet_ring_wraparound.c
+++ b/tests/lifx/gateway/test_gateway_enqueue_packet_ring_wraparound.c
@@ -1,6 +1,7 @@
 #include "gateway.c"
 
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 int
 main(void)
diff --git a/tests/lifx/gateway/test_gateway_handle_tag_labels.c b/tests/lifx/gateway/test_gateway_handle_tag_labels.c
--- a/tests/lifx/gateway/test_gateway_handle_tag_labels.c
+++ b/tests/lifx/gateway/test_gateway_handle_tag_labels.c
@@ -3,6 +3,7 @@
 #include "gateway.c"
 
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 int
 main(void)
diff --git a/tests/lifx/gateway/test_gateway_update_tag_refcounts.c b/tests/lifx/gateway/test_gateway_update_tag_refcounts.c
--- a/tests/lifx/gateway/test_gateway_update_tag_refcounts.c
+++ b/tests/lifx/gateway/test_gateway_update_tag_refcounts.c
@@ -1,6 +1,7 @@
 #include "gateway.c"
 
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 int
 main(void)
diff --git a/tests/lifx/gateway/test_gateway_write_callback.c b/tests/lifx/gateway/test_gateway_write_callback.c
--- a/tests/lifx/gateway/test_gateway_write_callback.c
+++ b/tests/lifx/gateway/test_gateway_write_callback.c
@@ -3,6 +3,7 @@
 #define MOCKED_EVBUFFER_WRITE_ATMOST
 #define MOCKED_EVBUFFER_GET_LENGTH
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 size_t
 evbuffer_get_length(const struct evbuffer *buf)
diff --git a/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c b/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
--- a/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
@@ -3,6 +3,7 @@
 #define MOCKED_EVBUFFER_WRITE_ATMOST
 #define MOCKED_EVBUFFER_GET_LENGTH
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 size_t
 evbuffer_get_length(const struct evbuffer *buf)
diff --git a/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c b/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
--- a/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
@@ -3,6 +3,7 @@
 #define MOCKED_EVBUFFER_WRITE_ATMOST
 #define MOCKED_EVBUFFER_GET_LENGTH
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 size_t
 evbuffer_get_length(const struct evbuffer *buf)
diff --git a/tests/lifx/gateway/test_gateway_write_callback_partial_write.c b/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
--- a/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
@@ -3,6 +3,7 @@
 #define MOCKED_EVBUFFER_WRITE_ATMOST
 #define MOCKED_EVBUFFER_GET_LENGTH
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 size_t
 evbuffer_get_length(const struct evbuffer *buf)
diff --git a/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c b/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
--- a/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
@@ -3,6 +3,7 @@
 #define MOCKED_EVBUFFER_WRITE_ATMOST
 #define MOCKED_EVBUFFER_GET_LENGTH
 #include "test_gateway_utils.h"
+#include "mock_timer.h"
 
 size_t
 evbuffer_get_length(const struct evbuffer *buf)
