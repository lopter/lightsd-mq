# HG changeset patch
# Parent  b429a8df7430d049d2c039a624f7e6cd8ac438e5
Actually fix set_waveform on big endian architectures

http://gph.is/1tvJ2WD

And test it this time.

diff --git a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -89,6 +89,9 @@
 ADD_SUBDIRECTORY(lifx)
 # 2.8.11 is the first version with TARGET_INCLUDE_DIRECTORIES:
 IF (CMAKE_VERSION VERSION_GREATER 2.8.10)
+    CONFIGURE_FILE(
+        CTestCustom.cmake.in "${LIGHTSD_BINARY_DIR}/CTestCustom.cmake" @ONLY
+    )
     ADD_SUBDIRECTORY(tests)
 ELSE ()
     MESSAGE(
diff --git a/CTestCustom.cmake.in b/CTestCustom.cmake.in
new file mode 100644
--- /dev/null
+++ b/CTestCustom.cmake.in
@@ -0,0 +1,3 @@
+IF (NOT @BIG_ENDIAN_SYSTEM@)
+    SET(CTEST_CUSTOM_TESTS_IGNORE test_wire_proto_float_endian_conversion)
+ENDIF ()
diff --git a/lifx/wire_proto.h b/lifx/wire_proto.h
--- a/lifx/wire_proto.h
+++ b/lifx/wire_proto.h
@@ -29,7 +29,7 @@
 lgtd_lifx_wire_htolefloat(float f)
 {
     union { float f; uint32_t i; } u = { .f = f };
-    htole32(u.i);
+    u.i = htole32(u.i);
     return u.f;
 }
 
@@ -37,7 +37,7 @@
 lgtd_lifx_wire_lefloattoh(float f)
 {
     union { float f; uint32_t i; } u = { .f = f };
-    le32toh(u.i);
+    u.i = le32toh(u.i);
     return u.f;
 }
 
diff --git a/tests/lifx/wire_proto/test_wire_proto_float_endian_conversion.c b/tests/lifx/wire_proto/test_wire_proto_float_endian_conversion.c
new file mode 100644
--- /dev/null
+++ b/tests/lifx/wire_proto/test_wire_proto_float_endian_conversion.c
@@ -0,0 +1,15 @@
+#include <sys/tree.h>
+
+#include <endian.h>
+#include <stdint.h>
+
+#include "lifx/wire_proto.h"
+
+int
+main(void)
+{
+    union u { float f; uint32_t i; };
+    union u value = { .i = 0x11223344 };
+    union u new_value = { .f = lgtd_lifx_wire_htolefloat(value.f) };
+    return new_value.i != 0x44332211;
+}
