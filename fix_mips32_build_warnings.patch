# HG changeset patch
# Parent 6727d0c0bdc0bdbe134b55f57b720f7d8481ba73
Fix build warnings on mips32

diff --git a/tests/core/router/test_router_send_to_broadcast.c b/tests/core/router/test_router_send_to_broadcast.c
--- a/tests/core/router/test_router_send_to_broadcast.c
+++ b/tests/core/router/test_router_send_to_broadcast.c
@@ -46,8 +46,8 @@
         }
         if (lgtd_tests_gw_pkt_queue[i].pkt_size != sizeof(payload)) {
             lgtd_errx(
-                1, "unexpected pkt size %d (expected %ld)",
-                lgtd_tests_gw_pkt_queue[i].pkt_size, sizeof(payload)
+                1, "unexpected pkt size %d (expected %ju)",
+                lgtd_tests_gw_pkt_queue[i].pkt_size, (uintmax_t)sizeof(payload)
             );
         }
     }
diff --git a/tests/core/router/test_router_send_to_device.c b/tests/core/router/test_router_send_to_device.c
--- a/tests/core/router/test_router_send_to_device.c
+++ b/tests/core/router/test_router_send_to_device.c
@@ -51,8 +51,8 @@
 
     if (pkt_size != sizeof(payload)) {
         lgtd_errx(
-            1, "unexpected pkt size %d (expected %ld)",
-            pkt_size, sizeof(payload)
+            1, "unexpected pkt size %d (expected %ju)",
+            pkt_size, (uintmax_t)sizeof(payload)
         );
     }
 
diff --git a/tests/core/router/test_router_send_to_label.c b/tests/core/router/test_router_send_to_label.c
--- a/tests/core/router/test_router_send_to_label.c
+++ b/tests/core/router/test_router_send_to_label.c
@@ -55,8 +55,8 @@
 
     if (pkt_size != sizeof(payload)) {
         lgtd_errx(
-            1, "unexpected pkt size %d (expected %ld)",
-            pkt_size, sizeof(payload)
+            1, "unexpected pkt size %d (expected %ju)",
+            pkt_size, (uintmax_t)sizeof(payload)
         );
     }
 
diff --git a/tests/core/router/test_router_send_to_tag.c b/tests/core/router/test_router_send_to_tag.c
--- a/tests/core/router/test_router_send_to_tag.c
+++ b/tests/core/router/test_router_send_to_tag.c
@@ -52,8 +52,8 @@
 
     if (pkt_size != sizeof(payload)) {
         lgtd_errx(
-            1, "unexpected pkt size %d (expected %ld)",
-            pkt_size, sizeof(payload)
+            1, "unexpected pkt size %d (expected %ju)",
+            pkt_size, (uintmax_t)sizeof(payload)
         );
     }
 
@@ -94,8 +94,8 @@
 
         if (pkt_size != sizeof(payload)) {
             lgtd_errx(
-                1, "unexpected pkt size %d (expected %ld)",
-                pkt_size, sizeof(payload)
+                1, "unexpected pkt size %d (expected %ju)",
+                pkt_size, (uintmax_t)sizeof(payload)
             );
         }
 
diff --git a/tests/lifx/gateway/CMakeLists.txt b/tests/lifx/gateway/CMakeLists.txt
--- a/tests/lifx/gateway/CMakeLists.txt
+++ b/tests/lifx/gateway/CMakeLists.txt
@@ -13,8 +13,8 @@
     ${LIGHTSD_SOURCE_DIR}/lifx/timer.c
     ${LIGHTSD_SOURCE_DIR}/lifx/wire_proto.c
     ${CMAKE_CURRENT_SOURCE_DIR}/../tests_shims.c
-    ${TIME_MONOTONIC_IMPL}
 )
+TARGET_LINK_LIBRARIES(test_lifx_gateway ${TIME_MONOTONIC_LIBRARY})
 
 FUNCTION(ADD_GATEWAY_TEST TEST_SOURCE)
     ADD_TEST_FROM_C_SOURCES(${TEST_SOURCE} test_lifx_gateway)
diff --git a/tests/lifx/gateway/test_gateway_handle_tag_labels.c b/tests/lifx/gateway/test_gateway_handle_tag_labels.c
--- a/tests/lifx/gateway/test_gateway_handle_tag_labels.c
+++ b/tests/lifx/gateway/test_gateway_handle_tag_labels.c
@@ -21,15 +21,15 @@
 
     lgtd_lifx_gateway_handle_tag_labels(&gw, &hdr, &pkt);
     if (gw.tag_ids != 0) {
-        errx(1, "expected gw.tags == 0 but got %jx", (uintmax_t)gw.tags);
+        errx(1, "expected gw.tag_ids == 0 but got %jx", (uintmax_t)gw.tag_ids);
     }
 
     pkt.tags = LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42);
     lgtd_lifx_gateway_handle_tag_labels(&gw, &hdr, &pkt);
     if (gw.tag_ids != LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42)) {
         errx(
-            1, "expected gw.tags == %jx but got %jx",
-            LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42), (uintmax_t)gw.tags
+            1, "expected gw.tag_ids == %jx but got %jx",
+            LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42), (uintmax_t)gw.tag_ids
         );
     }
     if (!gw.tags[42]) {
@@ -53,8 +53,8 @@
                         | LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(4);
     if (gw.tag_ids != expected) {
         errx(
-            1, "expected gw.tags == %jx but got %jx",
-            LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42), (uintmax_t)gw.tags
+            1, "expected gw.tag_ids == %jx but got %jx",
+            LGTD_LIFX_WIRE_TAG_ID_TO_VALUE(42), (uintmax_t)gw.tag_ids
         );
     }
     if (strcmp(gw.tags[2]->label, "toto")) {
diff --git a/tests/lifx/gateway/test_gateway_write_callback.c b/tests/lifx/gateway/test_gateway_write_callback.c
--- a/tests/lifx/gateway/test_gateway_write_callback.c
+++ b/tests/lifx/gateway/test_gateway_write_callback.c
@@ -32,8 +32,8 @@
     expected += sizeof(struct lgtd_lifx_packet_power_state);
     if (howmuch != expected) {
         errx(
-            1, "evbuffer_write_atmost expected %d but got %ld",
-            expected, howmuch
+            1, "evbuffer_write_atmost expected %d but got %jd",
+            expected, (intmax_t)howmuch
         );
     }
 
diff --git a/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c b/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
--- a/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_clears_ring_full_flag.c
@@ -32,8 +32,8 @@
     expected += sizeof(struct lgtd_lifx_packet_power_state);
     if (howmuch != expected) {
         errx(
-            1, "evbuffer_write_atmost expected %d but got %ld",
-            expected, howmuch
+            1, "evbuffer_write_atmost expected %d but got %jd",
+            expected, (intmax_t)howmuch
         );
     }
 
diff --git a/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c b/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
--- a/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_last_packet_on_ring.c
@@ -31,8 +31,8 @@
     expected += sizeof(struct lgtd_lifx_packet_power_state);
     if (howmuch != expected) {
         errx(
-            1, "evbuffer_write_atmost expected %d but got %ld",
-            expected, howmuch
+            1, "evbuffer_write_atmost expected %d but got %jd",
+            expected, (intmax_t)howmuch
         );
     }
 
diff --git a/tests/lifx/gateway/test_gateway_write_callback_partial_write.c b/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
--- a/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_partial_write.c
@@ -34,8 +34,8 @@
     );
     if (howmuch != expected) {
         errx(
-            1, "evbuffer_write_atmost expected %d but got %ld",
-            expected, howmuch
+            1, "evbuffer_write_atmost expected %d but got %jd",
+            expected, (intmax_t)howmuch
         );
     }
 
diff --git a/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c b/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
--- a/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
+++ b/tests/lifx/gateway/test_gateway_write_callback_ring_wraparound.c
@@ -32,8 +32,8 @@
     expected += sizeof(struct lgtd_lifx_packet_power_state);
     if (howmuch != expected) {
         errx(
-            1, "evbuffer_write_atmost expected %d but got %ld",
-            expected, howmuch
+            1, "evbuffer_write_atmost expected %d but got %jd",
+            expected, (intmax_t)howmuch
         );
     }
 
